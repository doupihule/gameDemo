"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const UserModel_1 = require("../model/UserModel");
const Client_1 = require("../../../framework/common/kakura/Client");
const SingleCommonServer_1 = require("../../../framework/server/SingleCommonServer");
const LevelFunc_1 = require("../func/LevelFunc");
const GlobalParamsFunc_1 = require("../func/GlobalParamsFunc");
const UserExtModel_1 = require("../model/UserExtModel");
/*
对战模块
 */
class BattleServer {
    static battleResult(levelId, star, callBack, thisObj) {
        if (star >= 4 || star <= 0)
            return;
        var upData = {};
        var deData = {};
        var userExt = {};
        var coin = Number(UserModel_1.default.instance.getCoin());
        var gold = Number(UserModel_1.default.instance.getGiftGold());
        var levelInfo = LevelFunc_1.default.instance.getLevelInfoById(levelId);
        var reward = levelInfo.reward;
        var getCoin = 0;
        var getGold = 0;
        if (star >= 3) {
            var rewardInfo = reward[0].split(",");
            if (rewardInfo[0] == 2) {
                getCoin += Number(rewardInfo[1]);
            }
            if (rewardInfo[0] == 3) {
                getGold += Number(rewardInfo[1]);
            }
        }
        if (star >= 2) {
            var rewardInfo = reward[1].split(",");
            if (rewardInfo[0] == 2) {
                getCoin += Number(rewardInfo[1]);
            }
            if (rewardInfo[0] == 3) {
                getGold += Number(rewardInfo[1]);
            }
        }
        if (star >= 1) {
            var rewardInfo = reward[2].split(",");
            if (rewardInfo[0] == 2) {
                getCoin += Number(rewardInfo[1]);
            }
            if (rewardInfo[0] == 3) {
                getGold += Number(rewardInfo[1]);
            }
        }
        if (getCoin > 0) {
            coin += getCoin;
            upData["coin"] = coin;
        }
        if (getGold > 0) {
            gold += getGold;
            upData["giftGold"] = gold;
        }
        if (Number(levelId) > Number(UserModel_1.default.instance.getMaxBattleLevel())) {
            userExt["maxStage"] = levelId;
        }
        userExt["stageRank"] = {};
        if (UserModel_1.default.instance.getstageRank(levelId) < star) {
            userExt["stageRank"][levelId] = star;
        }
        upData["userExt"] = userExt;
        var backData = Client_1.default.instance.doDummyServerBack(null, upData, deData);
        if (callBack) {
            callBack.call(thisObj, backData);
        }
        SingleCommonServer_1.default.startSaveClientData();
    }
    static battleStart(callBack, thisObj) {
        var upData = {};
        var deData = {};
        var userExt = {};
        //战斗消耗体力
        var levelSpCost = GlobalParamsFunc_1.default.instance.getDataNum('levelSpCost');
        UserExtModel_1.default.instance.changeSp(-levelSpCost);
        userExt['sp'] = UserExtModel_1.default.instance.getNowSp();
        userExt['upSpTime'] = UserExtModel_1.default.instance.getUpTime();
        upData["userExt"] = userExt;
        var backData = Client_1.default.instance.doDummyServerBack(null, upData, deData);
        if (callBack) {
            callBack.call(thisObj, backData);
        }
        SingleCommonServer_1.default.startSaveClientData();
    }
}
exports.default = BattleServer;
//# sourceMappingURL=BattleServer.js.map