"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const LogsManager_1 = require("../../../framework/manager/LogsManager");
const FileUtils_1 = require("../../../framework/utils/FileUtils");
const StatisticsExtendManager_1 = require("../../../framework/manager/StatisticsExtendManager");
const Client_1 = require("../../../framework/common/kakura/Client");
class StatisticsManager {
    constructor() {
    }
    static get ins() {
        if (!this._ins) {
            this._ins = new StatisticsManager();
        }
        return this._ins;
    }
    init() {
    }
    /**loading完成 开始玩 打点计时 */
    static onLoadingLog() {
        if (this.isLoadingLog)
            return;
        if (FileUtils_1.default.isUserWXSource()) {
            this.isLoadingLog = true;
            var disT = Client_1.default.instance.miniserverTime - this.mainStartT;
            if (disT > this.loadingOutT) {
                disT -= this.loadingOutT;
            }
            if (disT > 100000) {
                LogsManager_1.default.echo("krma. start " + this.mainStartT + " end " + Client_1.default.instance.miniserverTime + " time " + disT + " except " + this.loadingOutT);
                LogsManager_1.default.sendErrorToPlatform("loadingTime_moreThan_100000", LogsManager_1.default.errorTage_serverError, 1000, "loadingTime_moreThan_100000");
            }
            LogsManager_1.default.sendLoadingToAiCloud(disT);
        }
    }
    /**loading过程中隐藏到后台的时间长 */
    static addLoadingOutTime(disT) {
        if (this.isLoadingLog)
            return;
        if (disT > 0) {
            this.loadingOutT += disT;
        }
    }
    /**数据打点 */
    onEvent(event, eventData = null) {
        StatisticsExtendManager_1.default.onEvent(event, eventData);
    }
}
exports.default = StatisticsManager;
StatisticsManager.mainStartT = 0;
StatisticsManager.isLoadingLog = false;
StatisticsManager.loadingOutT = 0;
/**根据进游戏时读缓存判断是否为新玩家 */
StatisticsManager.isNewPlayer = false;
//设置合法域名
//https://pingtas.qq.com https://h5.udrig.com、https://api.talkingdata.com https://glog.aldwx.com
//StatisticsManager.ins.onEvent(StatisticsManager.SHAREWX, {type:type})
// 打点分组枚举常量
StatisticsManager.GROUP_Level = 'C_Level';
StatisticsManager.GROUP_Hero = 'D_Hero';
StatisticsManager.GROUP_ShowTv = 'G_ShowTv';
StatisticsManager.GROUP_Share = 'H_Share';
StatisticsManager.GROUP_GUIDE = "E_Guide";
StatisticsManager.GROUP_EQUIP = "F_Equip";
StatisticsManager.GROUP_LOTTERY = "I_Lottery";
StatisticsManager.GROUP_FOG = "K_fog";
StatisticsManager.GROUP_TASK = "L_task";
StatisticsManager.GROUP_SHOP = "M_shop";
StatisticsManager.GROUP_RECORD = "N_record";
StatisticsManager.GROUP_WORK = "O_work";
//各模块数据打点
// -----------------------------------------------------视频相关end----------------------------------------------------
// -----------------------------------------------------分享相关----------------------------------------------------
// -----------------------------------------------------分享相关end-----------------------------------
//-------------------------------------------------引导---------------------------------------------------
StatisticsManager.GUIDE_10004 = { groupId: StatisticsManager.GROUP_GUIDE, sortId: 18, name: "guide_unforced_10004" }; //前往下一章引导
StatisticsManager.FOG_NEXTLEVEL = { groupId: StatisticsManager.GROUP_FOG, sortId: 5, name: "fog_nextLevel" }; //迷雾街区进入下一层的人数/次数
StatisticsManager.FOG_EVENT_TRIGGER = { groupId: StatisticsManager.GROUP_FOG, sortId: 6, name: "fog_event_trigger" }; //迷雾街区触发事件的人数/次数
StatisticsManager.FOG_EVENT_COMPLETE = { groupId: StatisticsManager.GROUP_FOG, sortId: 7, name: "fog_event_complete" }; //迷雾街区完成事件的人数/次数
StatisticsManager.FOG_ITEM_GET = { groupId: StatisticsManager.GROUP_FOG, sortId: 9, name: "fog_item_get" }; //迷雾街区大巴车获得局内道具的人数/次数
StatisticsManager.FOG_BATTLE_START = { groupId: StatisticsManager.GROUP_FOG, sortId: 10, name: "fog_battle_start" }; //进入战斗的人数/次数
//# sourceMappingURL=StatisticsManager.js.map