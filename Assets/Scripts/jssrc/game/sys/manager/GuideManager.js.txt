"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const WindowManager_1 = require("../../../framework/manager/WindowManager");
const StatisticsManager_1 = require("./StatisticsManager");
const LogsManager_1 = require("../../../framework/manager/LogsManager");
const UserModel_1 = require("../model/UserModel");
const GuideFunc_1 = require("../func/GuideFunc");
const WindowCfgs_1 = require("../consts/WindowCfgs");
class GuideManager {
    constructor() {
        this.noMask = false;
        this.point = { x: 0, y: 0 };
        /*
        {
            1001:{
                type: 10,//显示类型
                bottom: 265,
                top: NaN,
                x: 0,
                y: ScreenAdapterTools.height - 108 - 30,
                width: 107,
                height: 108,
                statisticsIndex: StatisticsManager.GUIDE_EQUIPSHOP_3,//完成打点
                guideSkip: StatisticsManager.GUIDE_EQUIPSHOP_SKIP,//跳过打点
            }
        }
        */
        this.guideData = {};
    }
    static get ins() {
        if (!GuideManager._ins) {
            GuideManager._ins = new GuideManager();
        }
        return GuideManager._ins;
    }
    /**
     *   初始化引导位置
     */
    setGuideData(guideId, type, object = null, parentUI = null, width = null, height = null, x = null, y = null, extra = null) {
    }
    /**
     *   获取记录过的引导位置信息
     */
    getGuideData(guideId) {
        var data = this.guideData[guideId];
        return data;
    }
    /**
     *   获取副引导是否完成
     */
    isGuideFin(guideId) {
        var flag = UserModel_1.default.instance.getSubGuide()[String(guideId)];
        if (flag) {
            return true;
        }
        return false;
    }
    enterGuideRoom(uiName) {
    }
    checkMainGuide() {
        if (UserModel_1.default.instance.getMainGuide() == 0) {
            return true;
        }
        return false;
    }
    isMainGuideNeed(guideId, lastGuideId, lastGuideId2) {
    }
    clearGuide() {
        WindowManager_1.default.CloseGuideUI(WindowCfgs_1.WindowCfgs.TalkFrameUI);
    }
    recvMsg() {
    }
    //打开引导界面（遮罩）
    openGuideUI(id, callBack = null, thisObj = null, skipCall = null) {
        this.nowGuideId = id;
        // if (WindowManager.isUIOpened(WindowCfgs.SevenDaysUI)) {
        //     WindowManager.CloseUI(WindowCfgs.SevenDaysUI);
        // }
        var guideData = GuideFunc_1.default.instance.getGuideInfo(id);
        this.nowGuideId = id;
        LogsManager_1.default.echo("krma. GameData.nowGuideId = " + this.nowGuideId);
        var x = 0;
        var y = 0;
        var width = 0;
        var height = 0;
        var type = 7;
        var position = null;
        var guideId = id;
        position = GuideManager.ins.getGuideData(guideId);
        if (position) {
            if (position.statisticsIndex)
                StatisticsManager_1.default.ins.onEvent(position.statisticsIndex);
            if (position.statisticsIndexExtra)
                StatisticsManager_1.default.ins.onEvent(position.statisticsIndexExtra);
            this.nowGuideSkip = position.guideSkip;
            type = position.type;
            x = position.x || x;
            y = position.y || y;
            width = position.width || width;
            height = position.height || height;
        }
        if (guideData.style != null) {
            type = guideData.style;
        }
        // if (this.guideUI || this.guideUI == 0) {
        WindowManager_1.default.OpenGuideUI(WindowCfgs_1.WindowCfgs.GuideUI, [guideId, x, y, width, height, type, guideData.maskTransparency * 0.01, position, callBack, thisObj, skipCall]);
        // }
        // Message.instance.send(GuideEvent.GUIDE_EVENT_OPENGUIDE);
    }
    //单步引导完成
    guideFin(guideId, callBack, thisObj, needSync = false) {
    }
}
exports.default = GuideManager;
GuideManager.GuideType = {
    Auto: 1,
    Static: 2,
    None: 3
};
GuideManager.maxGuide = 10;
//# sourceMappingURL=GuideManager.js.map