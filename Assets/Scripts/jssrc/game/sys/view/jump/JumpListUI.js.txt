"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const JumpManager_1 = require("../../../../framework/manager/JumpManager");
const TimerManager_1 = require("../../../../framework/manager/TimerManager");
const GlobalParamsFunc_1 = require("../../func/GlobalParamsFunc");
const LogsManager_1 = require("../../../../framework/manager/LogsManager");
const JumpConst_1 = require("../../consts/JumpConst");
const UserInfo_1 = require("../../../../framework/common/UserInfo");
const WindowManager_1 = require("../../../../framework/manager/WindowManager");
const WindowCfgs_1 = require("../../consts/WindowCfgs");
const UIBaseView_1 = require("../../../../framework/components/UIBaseView");
class JumpListUI extends UIBaseView_1.default {
    constructor() {
        super();
        this._itemMoveCode = 0;
        this.listData = [];
        this.lineCount = 2;
        this.itemWidth = 178;
        this.itemHeight = 211;
        this.imgWidth = 155;
        this.spaceX = 22;
        this.spaceY = 20;
        this.isInit = false;
        this.isFirstInit = true;
        /**是否被按住 */
        this.isTouch = false;
        /**方向，是否向下移动 */
        this.isDown = true;
        this.fakeNumList = [];
    }
    setData(data) {
        var fakeNumList = GlobalParamsFunc_1.default.instance.getGlobalCfgDatas("electAdvertisingNub").arr;
        for (var index in fakeNumList) {
            this.fakeNumList.push(fakeNumList[index]);
        }
        this.fakeNumList = this.fakeNumList.sort(() => {
            return Math.random() < 0.5 ? 1 : -1;
        });
        this.closeCallback = null;
        this.closeThisObj = null;
        if (data && data[0] && data[0].callback) {
            this.closeCallback = data[0].callback;
            this.closeThisObj = data[0].thisObj;
        }
        if (data && data[0] && data[0].from) {
            this.fromWhere = data[0].from;
        }
        JumpManager_1.default.setFrom = this.fromWhere;
        JumpManager_1.default.isInDrawer = true;
        this.initView();
        JumpManager_1.default.mtDrawer(this.listData);
    }
    initView() {
    }
    /**点击图片 */
    clickItem(data) {
        LogsManager_1.default.echo("yrc clickItem", data);
        var sendData = {
            appId: data.GameAppId,
            path: data.PromoteLink,
            jumpData: data,
            extraData: {
                from: JumpConst_1.default.JUMPLIST
            }
        };
        UserInfo_1.default.platform.jumpToMiniProgram(sendData);
    }
    /**添加移动定时器 */
    startItemMoveLoop() {
        this.isTouch = false;
        this._itemMoveCode = TimerManager_1.default.instance.add(this.itemMove, this, 10);
    }
    /**icon左右移动 */
    itemMove() {
    }
    /**手指从这里抬起 */
    touchOut(isDouble) {
        this.touchEndCode = TimerManager_1.default.instance.setTimeout(() => {
            this.isTouch = false;
        }, this, 2000);
    }
    /**移除定时器 */
    clearMoveLoop() {
        TimerManager_1.default.instance.remove(this._itemMoveCode);
    }
    recvMsg(cmd, data) {
        switch (cmd) {
        }
    }
    close() {
        JumpManager_1.default.isInDrawer = false;
        this.clearMoveLoop();
        var tempFunc = this.closeCallback;
        var tempObj = this.closeThisObj;
        WindowManager_1.default.CloseUI(WindowCfgs_1.WindowCfgs.JumpListUI);
        tempFunc && tempFunc.call(tempObj);
    }
}
exports.default = JumpListUI;
