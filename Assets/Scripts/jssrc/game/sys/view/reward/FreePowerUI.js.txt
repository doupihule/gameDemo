"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ButtonUtils_1 = require("../../../../framework/utils/ButtonUtils");
const ButtonConst_1 = require("../../../../framework/consts/ButtonConst");
const ShareTvOrderFunc_1 = require("../../func/ShareTvOrderFunc");
const WindowManager_1 = require("../../../../framework/manager/WindowManager");
const WindowCfgs_1 = require("../../consts/WindowCfgs");
const GlobalParamsFunc_1 = require("../../func/GlobalParamsFunc");
const ShareOrTvManager_1 = require("../../../../framework/manager/ShareOrTvManager");
const UserInfo_1 = require("../../../../framework/common/UserInfo");
const StatisticsManager_1 = require("../../manager/StatisticsManager");
const StatisticsCommonConst_1 = require("../../../../framework/consts/StatisticsCommonConst");
const TranslateFunc_1 = require("../../../../framework/func/TranslateFunc");
const UIBaseView_1 = require("../../../../framework/components/UIBaseView");
const DataResourceConst_1 = require("../../consts/DataResourceConst");
class FreePowerUI extends UIBaseView_1.default {
    constructor() {
        super();
        this.initBtn();
    }
    initBtn() {
        this.descLabel.changeText(TranslateFunc_1.default.instance.getTranslate("#tid_addPower_01", null, GlobalParamsFunc_1.default.instance.getDataNum("spPerAd") + ""));
        new ButtonUtils_1.ButtonUtils(this.receiveBtn, this.onReceiveBtnClick, this).setBtnType(ButtonConst_1.default.BUTTON_TYPE_4);
        new ButtonUtils_1.ButtonUtils(this.closeBtn, this.close, this);
        new ButtonUtils_1.ButtonUtils(this.closeBtn2, this.close, this);
    }
    onReceiveBtnClick() {
        ShareOrTvManager_1.default.instance.shareOrTv(ShareTvOrderFunc_1.default.SHARELINE_FREE_SP, ShareOrTvManager_1.default.TYPE_ADV, {
            id: "1",
            extraData: {}
        }, this.successCall, null, this);
    }
    successCall() {
        if (this.adType == ShareOrTvManager_1.default.TYPE_ADV) {
            // StatisticsManager.ins.onEvent(StatisticsManager.VIDEO_POWERRECOVERY_CLICKSUCCESS);
        }
        else if (this.adType == ShareOrTvManager_1.default.TYPE_SHARE) {
            // StatisticsManager.ins.onEvent(StatisticsManager.SHARE_POWER_RECOVERY_SUCCESS);
        }
        if (this.freeType == DataResourceConst_1.default.SP) {
            this.close();
            var spPerAd = GlobalParamsFunc_1.default.instance.getDataNum("spPerAd");
            var spReward = DataResourceConst_1.default.SP + "," + spPerAd;
            //打开恭喜获得界面:{reward,shareOrTyId,isDouble}
            WindowManager_1.default.OpenUI(WindowCfgs_1.WindowCfgs.CommonRewardUI, { reward: [spReward], id: ShareTvOrderFunc_1.default.SHARELINE_FREE_SP, isDouble: 1 });
        }
    }
    setData(data) {
        this.freeType = data.type;
        // 预留不同资源复用
        if (this.freeType == DataResourceConst_1.default.SP) {
            this.adType = ShareOrTvManager_1.default.instance.getShareOrTvType(ShareTvOrderFunc_1.default.SHARELINE_FREE_SP);
            if (this.adType == ShareOrTvManager_1.default.TYPE_ADV) {
                this.receiveImg.setSkin("native/common/common_image_shipin.png");
                StatisticsManager_1.default.ins.onEvent(StatisticsCommonConst_1.default.VIDEO_TOTAL_SHOW);
                //  StatisticsManager.ins.onEvent(StatisticsManager.VIDEO_POWERRECOVERY_SHOW);
            }
            else if (this.adType == ShareOrTvManager_1.default.TYPE_SHARE) {
                StatisticsManager_1.default.ins.onEvent(StatisticsCommonConst_1.default.SHARE_TOTAL_SHOW);
                //   StatisticsManager.ins.onEvent(StatisticsManager.SHARE_POWERRECOVERY_SHOW);
                if (UserInfo_1.default.isWX()) {
                    // 微信渠道分享显示视频图标
                    this.receiveImg.setSkin("native/common/common_image_shipin.png");
                }
                else {
                    this.receiveImg.setSkin("native/common/common_image_fenxiang.png");
                }
            }
        }
        // BannerAdManager.addBannerQuick();
    }
    close() {
        // 关闭banner
        // BannerAdManager.hideQuickBanner();
        WindowManager_1.default.CloseUI(WindowCfgs_1.WindowCfgs.FreePowerUI);
    }
    recvMsg(cmd, data) {
        switch (cmd) {
        }
    }
}
exports.default = FreePowerUI;
//# sourceMappingURL=FreePowerUI.js.map