"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FogLayerControler = void 0;
const ViewTools_1 = require("../../../framework/components/ViewTools");
class FogLayerControler {
    constructor(fogControler, rootCtn) {
        this.fogControler = fogControler;
        this.rootCtn = rootCtn;
        this.a = ViewTools_1.default.createContainer("a");
        this.a1 = ViewTools_1.default.createContainer("a1");
        this.a2 = ViewTools_1.default.createContainer("a2");
        this.a3 = ViewTools_1.default.createContainer("a3");
        this.a2Offset = ViewTools_1.default.createContainer("a2offset");
        this.a21 = ViewTools_1.default.createContainer("a21");
        this.a22 = ViewTools_1.default.createContainer("a22");
        this.a23 = ViewTools_1.default.createContainer("a23");
        this.a24 = ViewTools_1.default.createContainer("a24");
        rootCtn.addChild(this.a);
        this.a.addChild(this.a1);
        this.a.addChild(this.a2);
        this.a.addChild(this.a3);
        //为了方便坐标好算. 网格的(0,0)点会和 原点有一个相对坐标偏移
        this.a2.addChild(this.a2Offset);
        this.a2Offset.x = 0;
        this.a2Offset.y = 0;
        this.a2Offset.addChild(this.a21);
        this.a2Offset.addChild(this.a22);
        this.a2Offset.addChild(this.a23);
        this.a2Offset.addChild(this.a24);
    }
    //销毁函数
    dispose() {
        this.a && this.a.removeChildren();
        this.a = null;
        this.a1 = null;
        this.a2 = null;
        this.a3 = null;
        this.a21 = null;
        this.a22 = null;
        this.a23 = null;
        this.fogControler = null;
    }
}
exports.FogLayerControler = FogLayerControler;
