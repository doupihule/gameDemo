"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const LogsManager_1 = require("../../manager/LogsManager");
const TimerManager_1 = require("../../manager/TimerManager");
const UIBaseView_1 = require("../../components/UIBaseView");
class BannerStyleJumpUI extends UIBaseView_1.default {
    constructor() {
        super();
        this.imgWidth = 160;
        this.spaceX = 8;
        /**是否被按住 */
        this.isTouch = false;
        /**定时移动 */
        /**方向，是否向右移动 */
        this.isRight = true;
        //剩余等待时间
        this._leftWaitFrame = 120;
        //剩余移动时间
        this._leftMoveFrame = 120;
        //移动速度
        this._moveSpeed = 2;
        //总移动距离
        this._moveTotalWid = 0;
        this._itemMoveCode = 0;
        this.moveCount = 0;
    }
    onAddToStage() {
        TimerManager_1.default.instance.deleteObjUpdate(null, this.updateFrame, this);
        TimerManager_1.default.instance.registObjUpdate(this.updateFrame, this);
    }
    //移除舞台 就移除刷新函数
    onRemoveStage() {
        TimerManager_1.default.instance.deleteObjUpdate(null, this.updateFrame, this);
    }
    initData(data, from) {
    }
    updateFrame() {
        //如果是按下状态 不执行
        if (this.isTouch) {
            return;
        }
        //如果剩余等待时间没到
        if (this._leftWaitFrame > 0) {
            this._leftWaitFrame--;
            return;
        }
        if (this._leftMoveFrame > 0) {
            this._leftMoveFrame--;
            this.itemMove();
            //运动时间到了之后开始等待
            if (this._leftMoveFrame == 0) {
                this._leftMoveFrame = BannerStyleJumpUI.perMoveFrame;
                this._leftWaitFrame = BannerStyleJumpUI.perWaitFrame;
                LogsManager_1.default.echo("_oneframemvoe");
            }
        }
    }
    /**按下item */
    touchDownItem() {
        this.isTouch = true;
        if (this.touchEndCode) {
            TimerManager_1.default.instance.remove(this.touchEndCode);
        }
    }
    /**icon左右移动 */
    itemMove() {
    }
    /**手指从这里抬起 */
    touchOut() {
        this.touchEndCode = TimerManager_1.default.instance.setTimeout(() => {
            this.isTouch = false;
        }, this, 2000);
    }
    recvMsg(cmd, data) {
    }
}
exports.default = BannerStyleJumpUI;
//每移动一格等待时间
BannerStyleJumpUI.perWaitFrame = 120;
BannerStyleJumpUI.perMoveFrame = 30; //每次移动的时间是0.5秒
