ModelToServerMap = class('ModelToServerMap')
function ModelToServerMap:ctor() end
ModelToServerMap.modelToServerMap = {};
function ModelToServerMap.initModelToServerMap()
  ModelToServerMap.modelToServerMap = {{key="user", model=UserModel}, {key="switches", model=SwitchModel}, {key="userExt", model=UserExtModel}, {key="roles", model=RolesModel}, {key="counts", model=CountsModel}, {key="talentSkills", model=TalentSkillsModel}, {key="sign", model=SevenDayModel}, {key="dailyGold", model=DailyGoldModel}, {key="pieces", model=PiecesModel}, {key="fog", model=FogModel}}
end

function ModelToServerMap.initBuildUserData()
  local bornSp = GlobalParamsFunc.instance:getDataNum('bornSp')
  LogsManager.echo("krma. 构造初始数据")
  local homeId = GlobalParamsFunc.instance:getDataNum("bornHomeId")
  local baseRoleId = GlobalParamsFunc.instance:getDataNum("bornRoleId")
  local baseRole = {id=baseRoleId, level=1, inLine=1}
  local baseHome = {id=homeId, level=1, inLine=0}
  local data = {coin=GlobalParamsFunc.instance:getDataNum("bornCoin"), giftGold=GlobalParamsFunc.instance:getDataNum("bornGold"), hasUpdateData=false, userExt={loginTime=Client.instance.serverTime, logoutTime=3000000000, sp=bornSp, upSpTime=Client.instance.serverTime, lastSaveTime=Client.instance.serverTimeMicro, registTime=Client.instance.serverTime}, roles={baseRoleId=baseRole}, sendTime=0, switches={3=GlobalParamsFunc.instance:getDataNum("initialMusic") / 10000, 4=GlobalParamsFunc.instance:getDataNum("initialSound") / 10000}}
  if GlobalParamsFunc.instance:getDataNum("initialShock") ~= 1 then
    data.switches[5+1] = 1
  end
  data.roles[homeId] = baseHome
  return data
end
