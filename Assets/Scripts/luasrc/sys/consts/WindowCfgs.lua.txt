WindowCfgs = {}
WindowCfgs.UISHOWTYPE_SCALEIN = 1;
WindowCfgs.UISHOWTYPE_FADEIN = 2;
WindowCfgs.UILAYER = "uilayer";
WindowCfgs.TOPLAYER = "toplayer";
WindowCfgs.HIGHLAYER = "highlayer";
WindowCfgs.DEBUGLAYER = "debugLayer";
WindowCfgs.LoadingUI = "LoadingControler";
WindowCfgs.ReqLoadingUI = "ReqLoadingUI";
WindowCfgs.AlertUILocal = "AlertUILocal";
WindowCfgs.AlertUI = "AlertUI";
WindowCfgs.TestOpListUI = "TestOpListUI";
WindowCfgs.LoginUI = "LoginUI";
WindowCfgs.GuideUI = "GuideUI";
WindowCfgs.TipsUI = "TipsUI";

WindowCfgs.JumpListUI = "JumpListUI";
WindowCfgs.ResultJumpUI = "ResultJumpUI";
WindowCfgs.GameMainUI = "GameMainUI";
WindowCfgs.BattleUI = "BattleUI";
WindowCfgs.BattleResultUI = "BattleResultUI";

WindowCfgs.BattleDetailUI = "BattleDetailUI";

WindowCfgs.SettingUI = "SettingUI";
WindowCfgs.commonCfgs = { modal = 1, modalAlpha = 0.3, parent = WindowCfgs.UILAYER, offset = { 0, 0 }, full = false, group = {}, sound = true, autoClose = false, style = 0, cache = false };
function WindowCfgs.getWindowCfgs(uiname)
    if not WindowCfgs._windowcfgs then
        WindowCfgs._windowcfgs = {
            [WindowCfgs.LoadingUI] = { modal = 1, path = LoadingUI, modalAlpha = 0, position = 8, offset = { 0, -100 } },
            [WindowCfgs.ReqLoadingUI] = { modal = 1, path = ReqLoadingUI, parent = WindowCfgs.TOPLAYER, autoClose = true, modalAlpha = 0.01 },
            [WindowCfgs.AlertUILocal] = { modal = 1, path = AlertUILocal, parent = WindowCfgs.HIGHLAYER, autoClose = true, modalAlpha = 0.01 },
            [WindowCfgs.TestOpListUI] = { modal = 1, path = TestOpListUI, parent = WindowCfgs.HIGHLAYER, autoClose = true, modalAlpha = 0.01, group = { "gameui/test/TestOpList.scene" } },
            [WindowCfgs.LoginUI] = { modal = 1, path = LoginUI, parent = WindowCfgs.TOPLAYER, modalAlpha = 0.01, group = { "gameui/login/Login.scene" }, subPackage = { "uisource", "atlas_source" } },
            [WindowCfgs.TipsUI] = { modal = 1, path = TipsUI, modalAlpha = 0.01 },
            [WindowCfgs.ResultJumpUI] = { modal = 1, path = ResultJumpUI, modalAlpha = 0.01, group = { "gameui/jump/ResultJump.scene" }, subPackage = { "uisource", "atlas_source" } },
            [WindowCfgs.JumpListUI] = { modal = 1, path = JumpListUI, modalAlpha = 0.01, group = { "gameui/jump/JumpList.scene" }, subPackage = { "uisource", "atlas_source" } },
            [WindowCfgs.GameMainUI] = { path = "main",prefabPath = "main",  group = { "native/GameMain.scene" }, full = true },
            [WindowCfgs.BattleUI] = { path = BattleUI, group = { "gameui/battle/Battle.scene" }, subPackage = { "uisource", "atlas_source" }, full = true },
        }
    end
    local cfg = WindowCfgs._windowcfgs[uiname];
    if not cfg then
        LogsManager.errorTag("windowcfgerror","没有配置windowcfg:",uiname);
    end
    return cfg
end


