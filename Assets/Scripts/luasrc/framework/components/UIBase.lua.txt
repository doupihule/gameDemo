UIBase = class("UIBase", LuaBaseView)

--对应的window配置
UIBase.windowCfgs = nil
--窗口名称
UIBase.windowName = nil


--设置数据
function UIBase:setData(...)
    print("____setData", self.__cname);
end


--重写 bangdingcui
function UIBase:setCObject(cui)
    UIBase.super.setCObject(self,cui);
    self:bindChild(cui, nil,"");
end

--绑定子属性
function UIBase:bindChild(cuiobj, parentLuaInstance,  path)
    --只绑定有特殊命名格式的组件.
    local transform = cuiobj.transform;
    local childCount = transform.childCount
    LogsManager.echo("--childCount",childCount);
    if childCount ==0 then
        return
    end
    for i = childCount, 1, -1 do
        local childTransform = transform:GetChild(i - 1)
        local name = childTransform.name;
        local uiType = string.split(name,"_")[1];
        local className = UICompConst.classMap[uiType];

        local targetLuaInstance;

        --如果类型存在
        if className then
            local childObj = childTransform.gameObject
            if uiType == UICompConst.comp_img then
                targetLuaInstance = luaui.Image.new(childObj)
            elseif uiType == UICompConst.comp_btn then
                targetLuaInstance = luaui.Button.new(childObj)
            elseif uiType == UICompConst.comp_label then
                targetLuaInstance = luaui.Label.new(childObj)
            elseif uiType == UICompConst.comp_input then
                targetLuaInstance = luaui.Label.new(childObj)
            elseif uiType == UICompConst.comp_scroll then
                targetLuaInstance = luaui.Scroll.new(childObj)
            elseif uiType == UICompConst.comp_list then
                targetLuaInstance = luaui.List.new(childObj)
                --如果是容器
            elseif uiType == UICompConst.comp_ctn then
                targetLuaInstance = luaui.Container.new(childObj)
            end

            targetLuaInstance:setName(name);
            if self[name] ~= nil then
                LogsManager.errorTag("uierror","有子对象名字重复了"..path..".".. name)
            end

            self[name] = targetLuaInstance;
            --如果有parent存在 那么可以通过链式的方式访问 比如 a.ctn_1.label;
            if parentLuaInstance then
                parentLuaInstance[name] = targetLuaInstance;
            end
            --scroll 和list 不需要绑定子对象
            if uiType ~= UICompConst.comp_scroll and uiType ~= UICompConst.comp_list then
                self:bindChild(childObj,targetLuaInstance,path..name);
            end
        else
            LogsManager.echo("这个对象不需要访问")
        end

    end

end

function UIBase:setWindowName(value)
    self.windowName = value;
    self:setName(value);
end

--打开ui设置数据
function UIBase:setData(params)

end


--关闭ui
function UIBase:close()
    WindowManager.CloseUIAPI(self.windowName);
end

--显示完成
function UIBase:onShowCompData()

end



--销毁
function UIBase:dispose()
    UIBase.super.dispose(self);
    Message.getInstance():removeObjEvents(self);
end