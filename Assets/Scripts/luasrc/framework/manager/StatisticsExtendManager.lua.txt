require("stringutil")
require("framework/manager/LogsManager")
require("framework/common/UserInfo")
require("framework/common/GameSwitch")

StatisticsExtendManager = class('StatisticsExtendManager')
function StatisticsExtendManager.onEvent(event, eventData)
  if eventData == nil then
    eventData=nil
  end
  local eventId = ""
  local sendData = {}
  if not event then
    local errStr = "没有写eventId"
    if eventData then
      errStr = errStr .. "eventData" .. JSON:stringify(eventData)
    end
    LogsManager.errorTag(nil, errStr)
    return
  end
  if eventData then
    if type(eventData) == "object" then
      for eKey in pairs(eventData) do
        if eventData:hasOwnProperty(eKey) then
          -- [ts2lua]eventData下标访问可能不正确
          local element = eventData[eKey]
          -- [ts2lua]sendData下标访问可能不正确
          sendData[eKey] = element
        end
      end
    else
      -- [ts2lua]sendData下标访问可能不正确
      sendData["extra"] = JSON:stringify(eventData)
    end
  end
  local isAld = false
  if type(event) == "object" then
    -- [ts2lua]event下标访问可能不正确
    eventId = event["name"]
    -- [ts2lua]sendData下标访问可能不正确
    -- [ts2lua]event下标访问可能不正确
    sendData["sortId"] = event["sortId"]
    -- [ts2lua]sendData下标访问可能不正确
    -- [ts2lua]event下标访问可能不正确
    sendData["groupId"] = event["groupId"]
    -- [ts2lua]event下标访问可能不正确
    isAld = event["isAld"]
  else
    eventId = event
  end
  -- [ts2lua]sendData下标访问可能不正确
  sendData["comeFrom"] = UserInfo.LoginSceneInfo
  if UserInfo.channelUserId then
    -- [ts2lua]sendData下标访问可能不正确
    sendData["channelUserId"] = UserInfo.channelUserId
  end
  if UserInfo.userSex ~= nil then
    if UserInfo.userSex == 0 then
      -- [ts2lua]sendData下标访问可能不正确
      sendData["sex"] = "未知"
    elseif UserInfo.userSex == 1 then
      -- [ts2lua]sendData下标访问可能不正确
      sendData["sex"] = "男"
    elseif UserInfo.userSex == 2 then
      -- [ts2lua]sendData下标访问可能不正确
      sendData["sex"] = "女"
    end
  else
    -- [ts2lua]sendData下标访问可能不正确
    sendData["sex"] = "未授权"
  end
  LogsManager.echo("yrc real send >>>>eventId:", eventId, ">>>>sendData:", event, ">>>>eventData", eventData)
  if UserInfo.isWX() and isAld then
    UserInfo.platform:aldSendEvent(eventId, sendData)
  end
  if not UserInfo.isWeb() then
    local sendAli = true
    local switch_disable_log = GameSwitch.getSwitchState(GameSwitch.SWITCH_DISABLE_LOG)
    switch_disable_log = switch_disable_log:split(",")
    if switch_disable_log:find(event.name) ~= -1 then
      sendAli = false
    end
    local switch_disable_log_group = GameSwitch.getSwitchState(GameSwitch.SWITCH_DISABLE_LOG_GROUP)
    switch_disable_log_group = switch_disable_log_group:split(",")
    if switch_disable_log_group:find(event.groupId) ~= -1 then
      sendAli = false
    end
    if sendAli then
      LogsManager.sendStaticToAiCloud(eventId, sendData)
    end
  end
end
