require("framework/manager/LogsManager")
require("framework/platform/comp/TopViewAutoComp")
require("framework/common/UserInfo")
require("framework/common/Message")
require("framework/event/WindowEvent")
require("framework/common/GameSwitch")

RecommendationBaiduComp = class('RecommendationBaiduComp',TopViewAutoComp)
RecommendationBaiduComp.TYPE_LIST = 'list';
RecommendationBaiduComp.TYPE_CAROUSEL = 'carousel';
function RecommendationBaiduComp.createRecommendationList(parent, left, top, onloadCallback)
  if onloadCallback == nil then
    onloadCallback=nil
  end
  return RecommendationBaiduComp(parent, RecommendationBaiduComp.TYPE_LIST, left, top, onloadCallback)
end

function RecommendationBaiduComp.createRecommendationCarousel(parent, left, top, onloadCallback)
  if onloadCallback == nil then
    onloadCallback=nil
  end
  return RecommendationBaiduComp(parent, RecommendationBaiduComp.TYPE_CAROUSEL, left, top, onloadCallback)
end

function RecommendationBaiduComp:ctor(parent, type, left, top, onloadCallback)
  if onloadCallback == nil then
    onloadCallback=nil
  end
  self:superCall('ctor')
  self._retryTimes = 0;
  self._loadFinish = false;
  self._hideType = TopViewAutoComp.HIDE_TYPE_HIDE;
  if not RecommendationBaiduComp.canUseRecommendBaidu() then
    return
  end
  local thisObj = self
  self._status = TopViewAutoComp.STATUS_HIDE
  self._hideType = TopViewAutoComp.HIDE_TYPE_HIDE
  self._parentName = parent.windowName
  self._recommendationButton = UserInfo.platform:getWX():createRecommendationButton({type=type, style={left=left, top=top}})
  self._recommendationButton:onError(function(e)
    if thisObj._retryTimes <= 1 then
      thisObj._retryTimes=thisObj._retryTimes+1
      thisObj._recommendationButton:load()
    end
    LogsManager.warn("Recommendation error:", JSON:stringify(e))
  end
  )
  self._recommendationButton:onLoad(function()
    thisObj._loadFinish = true
    thisObj._retryTimes = 0
    thisObj:_checkUIState(true)
    onloadCallback and onloadCallback:call(thisObj)
  end
  )
  Message.instance:add(WindowEvent.WINDOW_EVENT_SWITCHUIFIN, self)
  self._recommendationButton:load()
end

function RecommendationBaiduComp.canUseRecommendBaidu()
  if GameSwitch.checkOnOff(GameSwitch.SWITCH_DISIBLE_RECOMMEND_BAIDU) then
    LogsManager.echo('hlx Recommendation 禁用：推荐开关关闭')
    return false
  end
  if not UserInfo.platform:getWX().createRecommendationButton then
    LogsManager.echo("hlx Recommendation createRecommendationButton not found")
    return false
  end
  return true
end

function RecommendationBaiduComp:destroy()
  self:superCall('destroy')
  self._loadFinish = false
  if self._recommendationButton then
    self._recommendationButton:destroy()
    self._recommendationButton = nil
  end
end

function RecommendationBaiduComp:_compShow()
  if self._loadFinish then
    self._recommendationButton:show()
  end
end

function RecommendationBaiduComp:_compHide()
  if self._loadFinish then
    self._recommendationButton:hide()
  end
end
