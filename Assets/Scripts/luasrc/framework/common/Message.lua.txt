Message = class('Message')

function Message:ctor()
    self.msgMap = {}
end

function Message.getInstance()
    if not Message._instance then
        Message._instance = Message.new()
    end
    return Message._instance
end

function Message:add(cmd, msg)
    local list = self.msgMap[cmd]
    if not list then
        list = {}
        self.msgMap[cmd] = list
    end
    if table.findArrValue(list, msg) == -1 then
        table.insert(list, msg)
    end
end

function Message:remove(cmd, msg)
    local list = self.msgMap[cmd]
    if list then
        local len = #list
        for i = len, 1, -1 do
            if list[i] == msg then
                table.spliceArray(list, i, 1)
            end
        end
    end
end

function Message:send(cmd, data)
    local list = self.msgMap[cmd]
    if list then
        local len = #list
        for i = len, 1, -1 do
            doJsCallFunc(list[i].recvMsg, list[i], cmd, data)
        end
        if len <= 0 then
            self.msgMap[cmd] = nil
        end
    end
end

function Message:removeObjEvents(msg)
    for i in pairs(self.msgMap) do
        local list = self.msgMap[i]
        if #list > 0 then
            local len = #list
            for ii = len, 1, -1 do
                if list[ii] == msg then
                    table.spliceArray(list, ii, 1)
                end
            end
            if #list == 0 then
                self.msgMap[i] = nil
            end
        end
    end
end
