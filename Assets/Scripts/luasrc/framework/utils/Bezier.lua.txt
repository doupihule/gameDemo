require("framework/utils/Equation")

Bezier = class('Bezier')

function Bezier.s(t)
  return Math:sqrt(Bezier.A * t * t + Bezier.B * t + Bezier.C)
end

function Bezier.L(t)
  local temp1 = Math:sqrt(Bezier.C + t * Bezier.B + Bezier.A * t)
  local temp2 = 2 * Bezier.A * t * temp1 + Bezier.B * temp1 - Math:sqrt(Bezier.C)
  local temp3 = Math:log(Bezier.B + 2 * Math:sqrt(Bezier.A) * Math:sqrt(Bezier.C))
  local temp4 = Math:log(Bezier.B + 2 * Bezier.A * t + 2 * Math:sqrt(Bezier.A) * temp1)
  local temp5 = 2 * Math:sqrt(Bezier.A) * temp2
  local temp6 = Bezier.B * Bezier.B - 4 * Bezier.A * Bezier.C * temp3 - temp4
  return temp5 + temp6 / 8 * Math:pow(Bezier.A, 1.5)
end

function Bezier.InvertL(t, l)
  local t1 = t
  local t2 = nil
  return t2
end

function Bezier.init(tsvar_p0, tsvar_p1, tsvar_p2, tsvar_speed)
  Bezier.p0 = tsvar_p0
  Bezier.p1 = tsvar_p1
  Bezier.p2 = tsvar_p2
  Bezier.ax = Bezier.p0.x - 2 * Bezier.p1.x + Bezier.p2.x
  Bezier.ay = Bezier.p0.y - 2 * Bezier.p1.y + Bezier.p2.y
  Bezier.bx = 2 * Bezier.p1.x - 2 * Bezier.p0.x
  Bezier.by = 2 * Bezier.p1.y - 2 * Bezier.p0.y
  Bezier.A = 4 * Bezier.ax * Bezier.ax + Bezier.ay * Bezier.ay
  Bezier.B = 4 * Bezier.ax * Bezier.bx + Bezier.ay * Bezier.by
  Bezier.C = Bezier.bx * Bezier.bx + Bezier.by * Bezier.by
  Bezier.total_length = Bezier.L(1)
  Bezier.step = Math:floor(Bezier.total_length / tsvar_speed)
  if Bezier.total_length % tsvar_speed > tsvar_speed / 2 then
    Bezier.step=Bezier.step+1
  end
  return Bezier.step
end

Bezier.tempVec1 = {x=0, y=0};
Bezier.tempVec2 = {x=0, y=0};
function Bezier.getAnchorPoint(nIndex, needLineObj, pixelToMi)
  if needLineObj == nil then
    needLineObj=false
  end
  if pixelToMi == nil then
    pixelToMi=1
  end
  if nIndex >= 0 and nIndex <= Bezier.step then
    local t = nIndex / Bezier.step
    local l = t * Bezier.total_length
    t = Bezier.InvertL(t, l)
    local xx = 1 - t * 1 - t * Bezier.p0.x + 2 * 1 - t * t * Bezier.p1.x + t * t * Bezier.p2.x
    local yy = 1 - t * 1 - t * Bezier.p0.y + 2 * 1 - t * t * Bezier.p1.y + t * t * Bezier.p2.y
    local q0x = 1 - t * Bezier.p0.x + t * Bezier.p1.x
    local q0y = 1 - t * Bezier.p0.y + t * Bezier.p1.y
    local q1x = 1 - t * Bezier.p1.x + t * Bezier.p2.x
    local q1y = 1 - t * Bezier.p1.y + t * Bezier.p2.y
    local dx = q1x - q0x
    local dy = q1y - q0y
    local radians = Math:atan2(dy, dx)
    xx = xx * pixelToMi
    yy = yy * pixelToMi
    if needLineObj then
      local lineObj = Equation.creat_1_1_a(xx, yy, radians + Math.PI / 2)
      return {xx, yy, radians, lineObj}
    end
    return {xx, yy, radians}
  else
    return {}
  end
end
