HashMap = class('HashMap')
HashMap.HASH_COUNT = 0;
function HashMap:ctor()
  self.hashCode = 0;
  self.hashCode = HashMap.HASH_COUNT=HashMap.HASH_COUNT+1
end

function HashMap:put(key, value)
  -- [ts2lua]self下标访问可能不正确
  self[key] = value
end

function HashMap:get(key)
  -- [ts2lua]self下标访问可能不正确
  return self[key]
end

function HashMap:remove(key)
  -- [ts2lua]self下标访问可能不正确
  local value = self[key]
  if value ~= nil then
    -- [ts2lua]self下标访问可能不正确
    self[key] = nil
  end
  return value
end

function HashMap:contains(key)
  -- [ts2lua]self下标访问可能不正确
  return self[key] ~= nil
end

function HashMap:keys()
  local keys = Object:keys(self)
  local index = keys:find("hashCode")
  if index > -1 then
    keys:splice(index, 1)
  end
  return keys
end

function HashMap:clear()
  local keys = self:keys()
  local len = #keys
  local i = 0
  repeat
    self:remove(keys[i+1])
    i=i+1
  until not(i < len)
end
