




StringUtils = class('StringUtils')
function StringUtils.ScoreRange(score)
  if score > 99999999 then
    return 99999999
  else
    return score
  end
end

function StringUtils.formatTime(time)
  if time < 10 then
    time = "0" .. time
  end
  return time
end

function StringUtils.reprTime(time)
  local h = math.floor(time / 3600)
  local m = math.floor(time - 3600 * h / 60)
  local s = time - 3600 * h - 60 * m
  -- [ts2lua]lua中0和空字符串也是true，此处h > 10需要确认
  local sh = (h > 10 and {h} or {"0" .. h})[1]
  -- [ts2lua]lua中0和空字符串也是true，此处m > 10需要确认
  local sm = (m > 10 and {m} or {"0" .. m})[1]
  -- [ts2lua]lua中0和空字符串也是true，此处s > 10需要确认
  local ss = (s > 10 and {s} or {"0" .. s})[1]
  return sh .. ":" .. sm .. ":" .. ss
end

function StringUtils.getCoinStr(coin)
  return coinStr
end


function StringUtils.repeatStr(target, n)
  local s = ""
  local i = 0
  repeat
    s = s + target
    i=i+1
  until not(i < n)
  return s
end




StringUtils._signKey = "0123456789:abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function StringUtils.decodeSign(targetSign)
  local rtStr = ""
  local len = #targetSign
  local singKeyLen = #StringUtils._signKey
  local offNum = GameConsts.GAME_OFFEST % singKeyLen
  local i = 0
  repeat
    local tempStr = targetSign:sub(i)
    if tempStr == "|" then
      rtStr = rtStr .. "|"
    else
      local code = StringUtils._signKey:find(tempStr)
      if code == -1 then
        rtStr = rtStr + tempStr
      else
        code = code - offNum
        if code < 0 then
          code = code + singKeyLen
        end
        rtStr = rtStr + StringUtils._signKey:sub(code)
      end
    end
    i=i+1
  until not(i < len)
  return rtStr
end

function StringUtils.encodeSign(nativeSign)
  local rtStr = ""
  local len = #nativeSign
  local singKeyLen = #StringUtils._signKey
  local offNum = GameConsts.GAME_OFFEST % singKeyLen
  local i = 0
  repeat
    local tempStr = nativeSign:sub(i)
    if tempStr == "|" then
      rtStr = rtStr .. "|"
    else
      local code = StringUtils._signKey:find(tempStr)
      if code == -1 then
        rtStr = rtStr + tempStr
      else
        code = code + offNum
        if code >= singKeyLen then
          code = code - singKeyLen
        end
        rtStr = rtStr + StringUtils._signKey:sub(code)
      end
    end
    i=i+1
  until not(i < len)
  return rtStr
end
