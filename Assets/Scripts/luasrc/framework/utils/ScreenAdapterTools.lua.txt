ScreenAdapterTools = class('ScreenAdapterTools')
ScreenAdapterTools.Align_Left = 1;
ScreenAdapterTools.Align_LeftTop = 2;
ScreenAdapterTools.Align_MiddleTop = 3;
ScreenAdapterTools.Align_RightTop = 4;
ScreenAdapterTools.Align_Right = 5;
ScreenAdapterTools.Align_RightBottom = 6;
ScreenAdapterTools.Align_MiddleBottom = 7;
ScreenAdapterTools.Align_LeftBottom = 8;
ScreenAdapterTools.Align_Middle = 9;
ScreenAdapterTools.Align_ScaleWidth = 10;
ScreenAdapterTools.designWidth = 640;
ScreenAdapterTools.designHeight = 1136;
ScreenAdapterTools.isLandSpace = false;
ScreenAdapterTools.maxWidth = 768;
ScreenAdapterTools.maxHeight = 1400;
ScreenAdapterTools.width = 0;
ScreenAdapterTools.height = 0;
ScreenAdapterTools.UIOffsetX = 0;
ScreenAdapterTools.UIOffsetY = 0;
ScreenAdapterTools.sceneOffsetX = 0;
ScreenAdapterTools.sceneOffsetY = 0;
ScreenAdapterTools.toolBarWidth = 0;
ScreenAdapterTools.phoneSys = "";
ScreenAdapterTools.PHONE_BANGS = {  };
ScreenAdapterTools.windowWidth = 640;
ScreenAdapterTools.windowHeight = 1136;
ScreenAdapterTools.toolBarWay = -1;
ScreenAdapterTools.rootScale = 1;
function ScreenAdapterTools.isNotchDevice()
    return ScreenAdapterTools.toolBarWidth ~= 0
end

function ScreenAdapterTools.getStageScaleX()
    return ScreenAdapterTools.width / ScreenAdapterTools.windowWidth
end

function ScreenAdapterTools.getStageScaleY()
    return ScreenAdapterTools.height / ScreenAdapterTools.windowHeight
end

function ScreenAdapterTools.checkScreenFixMode(browWidth, browHeight)
    ScreenAdapterTools.stageWidth = browWidth
    ScreenAdapterTools.stageHeight = browHeight
    if ScreenAdapterTools.designWidth > ScreenAdapterTools.designHeight then
        ScreenAdapterTools.isLandSpace = true
    end
    local borderScale = ScreenAdapterTools.designWidth / ScreenAdapterTools.designHeight
    local targetScale = browWidth / browHeight
    local scaleMode = nil
    if ScreenAdapterTools.isLandSpace then
        if targetScale < borderScale then
            ScreenAdapterTools.width = ScreenAdapterTools.designWidth
            ScreenAdapterTools.rootScale = ScreenAdapterTools.width / browWidth;
            local targetHei = math.round(ScreenAdapterTools.width / targetScale)
            if targetHei > ScreenAdapterTools.maxHeight then
                ScreenAdapterTools.sceneOffsetY = (targetHei - ScreenAdapterTools.maxHeight) / 2
                ScreenAdapterTools.height = ScreenAdapterTools.maxHeight
            else
                ScreenAdapterTools.height = targetHei
            end
            scaleMode = "fixedwidth"
        else
            ScreenAdapterTools.height = ScreenAdapterTools.designHeight
            ScreenAdapterTools.width = math.round(ScreenAdapterTools.designHeight * targetScale)
            ScreenAdapterTools.rootScale = ScreenAdapterTools.height / browHeight;
            scaleMode = "fixedheight"
        end
    else
        if targetScale > borderScale then
            ScreenAdapterTools.height = ScreenAdapterTools.designHeight
            ScreenAdapterTools.rootScale = ScreenAdapterTools.height / browHeight;
            local targetWid = math.round(ScreenAdapterTools.designHeight * targetScale)
            if targetWid > ScreenAdapterTools.maxWidth then
                ScreenAdapterTools.sceneOffsetX = (targetWid - ScreenAdapterTools.maxWidth) / 2
                ScreenAdapterTools.width = ScreenAdapterTools.maxWidth
            else
                ScreenAdapterTools.width = targetWid
            end
            scaleMode = "fixedheight"
        else
            ScreenAdapterTools.width = ScreenAdapterTools.designWidth
            ScreenAdapterTools.rootScale = ScreenAdapterTools.width / browWidth;
            ScreenAdapterTools.height = math.round(ScreenAdapterTools.designWidth / targetScale)
            scaleMode = "fixedwidth"
        end
    end
    ScreenAdapterTools.UIOffsetX = (ScreenAdapterTools.width - ScreenAdapterTools.designWidth) / 2
    ScreenAdapterTools.UIOffsetY = (ScreenAdapterTools.height - ScreenAdapterTools.designHeight) / 2
    LogsManager.echo("适配结果:this.isLandSpace", scaleMode, ScreenAdapterTools.sceneOffsetX, ScreenAdapterTools.sceneOffsetY, "targetScale", targetScale)
    LogsManager.echo("stageW:", browWidth, "stageH:", browHeight, "wd:", ScreenAdapterTools.width, "hei:", ScreenAdapterTools.height, "ofx:", ScreenAdapterTools.UIOffsetX, "ofy:", ScreenAdapterTools.UIOffsetY)
    return scaleMode
end

function ScreenAdapterTools.checkFillBorder()
end

function ScreenAdapterTools.setPhoneSys(sysInfo)
    ScreenAdapterTools.windowWidth = sysInfo.windowWidth
    ScreenAdapterTools.windowHeight = sysInfo.windowHeight
    if ScreenAdapterTools.phoneSys ~= "" then
        return
    end
    local phoneModel = sysInfo.model
    Global.deviceModel = phoneModel
    if string.find(phoneModel, "iPhone") ~= nil or string.find(phoneModel, "iPad") ~= nil then
        ScreenAdapterTools.phoneSys = "iphone"
    elseif string.find(phoneModel, "Android") then
        ScreenAdapterTools.phoneSys = "android"
    end
    ScreenAdapterTools.checkBarBySafeArea(sysInfo)
    ScreenAdapterTools.checkBarByStatusBarHeight(sysInfo)
    ScreenAdapterTools.checkBarByBangs(phoneModel)
end

function ScreenAdapterTools.checkBarByBangs(phoneModel)
    if ScreenAdapterTools.toolBarWidth > 0 then
        return
    end
end

function ScreenAdapterTools.checkBarBySafeArea(sysInfo)
    if ScreenAdapterTools.toolBarWidth > 0 then
        return
    end
    if not sysInfo.safeArea then
        return
    end
    local top = sysInfo.safeArea.top or 0
    if top > 20 then
        ScreenAdapterTools.toolBarWidth = top * ScreenAdapterTools.getStageScaleY()
        if ScreenAdapterTools.toolBarWidth > 60 then
            ScreenAdapterTools.toolBarWidth = 60
        end
        Global.isPhoneBangs = true
        LogsManager.echo("hlx 刘海屏高度修改:根据安全区域 top:", top, "    this.height:", ScreenAdapterTools.height, "    this.windowHeight:", ScreenAdapterTools.windowHeight, "    toolBarWidth:", ScreenAdapterTools.toolBarWidth)
    end
end

function ScreenAdapterTools.checkBarByStatusBarHeight(sysInfo)
    if ScreenAdapterTools.toolBarWidth > 0 then
        return
    end
    local barH = sysInfo.statusBarHeight
    if ScreenAdapterTools.toolBarWidth == 0 and barH > 44 then
        LogsManager.echo("hlx 刘海屏高度修改:根据状态拦高度 statusBarHeight:", barH)
        ScreenAdapterTools.toolBarWidth = 60
        Global.isPhoneBangs = true
    end
end

function ScreenAdapterTools.reCheckBar(menuInfo)
    if ScreenAdapterTools.toolBarWidth > 0 then
        return
    end
    if not menuInfo then
        return
    end
    local top = menuInfo.top or 0
    LogsManager.echo("ycn reCheckBar top: ", top)
    if top > 20 then
        ScreenAdapterTools.toolBarWidth = top * ScreenAdapterTools.getStageScaleY()
        if ScreenAdapterTools.toolBarWidth > 60 then
            ScreenAdapterTools.toolBarWidth = 60
        end
        Global.isPhoneBangs = true
        LogsManager.echo("hlx 刘海屏高度修改:根据胶囊位置 reCheckBar top:", top, "    this.height:", ScreenAdapterTools.height, "    this.windowHeight:", ScreenAdapterTools.windowHeight, "    toolBarWidth:", ScreenAdapterTools.toolBarWidth)
    end
end

function ScreenAdapterTools.setViewAlign(view, alignType, moveScaleX, moveScaleY, withNotch)
    if moveScaleX == nil then
        moveScaleX = 1
    end
    if moveScaleY == nil then
        moveScaleY = 1
    end
    if withNotch == nil then
        withNotch = false
    end
    local offsetX = 0
    local offsetY = 0
    if alignType == ScreenAdapterTools.Align_Left then
        offsetX = -ScreenAdapterTools.UIOffsetX
    elseif alignType == ScreenAdapterTools.Align_LeftTop then
        offsetX = -ScreenAdapterTools.UIOffsetX
        offsetY = -ScreenAdapterTools.UIOffsetY
    elseif alignType == ScreenAdapterTools.Align_MiddleTop then
        offsetY = -ScreenAdapterTools.UIOffsetY
    elseif alignType == ScreenAdapterTools.Align_RightTop then
        offsetX = ScreenAdapterTools.UIOffsetX
        offsetY = -ScreenAdapterTools.UIOffsetY
    elseif alignType == ScreenAdapterTools.Align_Right then
        offsetX = ScreenAdapterTools.UIOffsetX
    elseif alignType == ScreenAdapterTools.Align_RightBottom then
        offsetX = ScreenAdapterTools.UIOffsetX
        offsetY = ScreenAdapterTools.UIOffsetY
    elseif alignType == ScreenAdapterTools.Align_MiddleBottom then
        offsetY = ScreenAdapterTools.UIOffsetY
    elseif alignType == ScreenAdapterTools.Align_LeftBottom then
        offsetX = -ScreenAdapterTools.UIOffsetX
        offsetY = ScreenAdapterTools.UIOffsetY
    end
    local offsetNotchX = 0
    local offsetNotchY = 0
    ScreenAdapterTools.offsetView(view, offsetX + offsetNotchX, offsetY + offsetNotchY)
    if not withNotch then
        ScreenAdapterTools.alignNotch(view, alignType)
    end
end

function ScreenAdapterTools.alignNotch(view, alignType)
    if alignType == nil then
        alignType = ScreenAdapterTools.Align_LeftTop
    end
    if not Global.isPhoneBangs then
        return
    end
    if ScreenAdapterTools.isLandSpace then
        if (alignType == ScreenAdapterTools.Align_Left or alignType == ScreenAdapterTools.Align_LeftBottom) or ScreenAdapterTools.Align_LeftTop then
            ScreenAdapterTools.offsetView(view, ScreenAdapterTools.toolBarWidth, 0)
        elseif (alignType == ScreenAdapterTools.Align_Right or alignType == ScreenAdapterTools.Align_RightBottom) or alignType == ScreenAdapterTools.Align_RightTop then
            ScreenAdapterTools.offsetView(view, -ScreenAdapterTools.toolBarWidth, 0)
        end
    else
        if (alignType == ScreenAdapterTools.Align_LeftTop or alignType == ScreenAdapterTools.Align_MiddleTop) or ScreenAdapterTools.Align_RightTop then
            ScreenAdapterTools.offsetView(view, 0, ScreenAdapterTools.toolBarWidth)
        end
    end
end

function ScreenAdapterTools.checkNativeSystemInfo(info)
    Global.deviceModel = info.model
    if info.toolBarHeight > 0 then
        ScreenAdapterTools.toolBarWidth = 60
        Global.isPhoneBangs = true
    else
        Global.isPhoneBangs = false
    end
end

function ScreenAdapterTools.checkIsAlignUp(alignType)
    return (alignType == ScreenAdapterTools.Align_LeftTop or alignType == ScreenAdapterTools.Align_MiddleTop) or alignType == ScreenAdapterTools.Align_RightTop
end

function ScreenAdapterTools.offsetView(view, offsetX, offsetY)
    local pos = view:get2dPos();
    view:setPos(pos.x + offsetX, pos.y + offsetY);
end
