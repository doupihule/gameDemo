VectorTools = class('VectorTools')

function VectorTools.multyByNumToSelf(vec, mul)
  vec.x = vec.x * mul
  vec.y = vec.y * mul
  vec.z = vec.z * mul
end

function VectorTools.multyByNum(vec, mul)
  vec.x = vec.x * mul
  vec.y = vec.y * mul
  vec.z = vec.z * mul
  return VectorTools.createVector3(vec.x * mul, vec.y * mul, vec.z * mul)
end

function VectorTools.addToSelf(vec, vec2)
  vec.x = vec.x + vec2.x
  vec.y = vec.y + vec2.y
  vec.z = vec.z + vec2.z
end

function VectorTools.added(vec, vec2)
  local newVec = VectorTools.createVector3(vec.x + vec2.x, vec.y + vec2.y, vec.z + vec2.z)
  return newVec
end

function VectorTools.reduceToSelf(vec, vec2)
  vec.x = vec.x - vec2.x
  vec.y = vec.y - vec2.y
  vec.z = vec.z - vec2.z
end

function VectorTools.copyVector(vec)
  return VectorTools.createVector3(vec.x, vec.y, vec.z)
end


function VectorTools.createVector2(x,y)
  return {x=x or 0,y=y or 0}
end

function VectorTools.createVector3(x,y,z)
  return {x=x or 0,y=y or 0,z = z or 0}
end
VectorTools.originPoint = VectorTools.createVector3();
VectorTools.unitPoint = VectorTools.createVector3(1, 1, 1);