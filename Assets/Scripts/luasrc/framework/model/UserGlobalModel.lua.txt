require("game/sys/model/BaseModel")
require("framework/common/kakura/Client")
require("game/sys/model/UserModel")
require("game/sys/func/GlobalParamsFunc")
require("framework/manager/LogsManager")
require("utils/Global")
require("framework/server/SingleCommonServer")

UserGlobalModel = class('UserGlobalModel',BaseModel)

function UserGlobalModel.__getters.instance()
  if not UserGlobalModel._instance then
    UserGlobalModel._instance = UserGlobalModel()
  end
  return UserGlobalModel._instance
end

UserGlobalModel.dataField = {'shareInfo', 'shareCount'};
function UserGlobalModel:checkHasInit()
  if not self._data then
    -- [ts2lua]GlobalParamsFunc.instance:getGlobalCfgDatas("beginHumanShareNmb")下标访问可能不正确
    self._data = {shareCount=GlobalParamsFunc.instance:getGlobalCfgDatas("beginHumanShareNmb")['num']}
    LogsManager.errorTag('user_glboal_model_not_load', 'error UserGlobalModel not init----use defaultData---------' .. JSON:stringify(self._data))
  end
  return true
end

function UserGlobalModel:initData(data)
  if not data then
    data = {}
  end
  self:superCall('initData',data)
end

function UserGlobalModel:getInviteInfo()
  if not self:checkHasInit() then
    return {}
  end
  return self._data.shareInfo or {}
end

function UserGlobalModel:flushGlobalData(callback, thisObj, params)
  if callback == nil then
    callback=nil
  end
  if thisObj == nil then
    thisObj=nil
  end
  if params == nil then
    params=nil
  end
  if UserModel.instance:getUserRid() ~= 'nologin' then
    if Global.checkIsSingleMode() then
      Client.instance:getCloudGlobalData({query=UserGlobalModel.dataField, id=UserModel.instance:getUserRid()}, self.flushGlobalDataCallback, self, {callback=callback, thisObj=thisObj, params=params})
    else
      local info = UserModel.instance:getData().shareCount
      if info then
        self:initData({shareCount=Number(info)})
      else
        self:initData(nil)
      end
      callback and callback:call(thisObj, params)
    end
  else
    callback and callback:call(thisObj, params)
  end
end

function UserGlobalModel:flushGlobalDataCallback(response, addParam)
  if response.result then
    self:initData(response.result.data)
  end
  if addParam.callback then
    addParam.callback:call(addParam.thisObj, addParam.params)
  end
end

function UserGlobalModel:getShareNum()
  if not self:checkHasInit() then
    return 1
  end
  return self._data.shareCount or 1
end

function UserGlobalModel:setShareNum(shareNumAdd)
  if not self:checkHasInit() then
    return
  end
  local newShareNum = nil
  if self._data.shareCount == undefined then
    -- [ts2lua]GlobalParamsFunc.instance:getGlobalCfgDatas("beginHumanShareNmb")下标访问可能不正确
    local beginShareCount = GlobalParamsFunc.instance:getGlobalCfgDatas("beginHumanShareNmb")['num']
    self._data.shareCount = 0
    self._data.shareCount = self._data.shareCount + beginShareCount
  end
  self._data.shareCount = self._data.shareCount + shareNumAdd
  if self._data.shareCount <= 0 then
    self._data.shareCount = 0
  end
  if UserModel.instance:getUserRid() == 'nologin' then
    return
  end
  if Global.checkIsSingleMode() then
    Client.instance:setCloudGlobalData({clientDirty={u={shareCount=self._data.shareCount}}, id=UserModel.instance:getUserRid()})
  else
    SingleCommonServer.sendNoAliCloudData({clientDirty={u={shareCount=self._data.shareCount}}})
  end
end

function UserGlobalModel.setOtherShareNum(id, shareNumAdd)
  LogsManager.echo("设置他人分享计数信息----id:" .. id .. "shareNumAdd:" .. shareNumAdd)
  local params = {query={'shareCount'}, id=id}
  Client.instance:getCloudGlobalData(params, function(response)
    if response and response.result then
      if response.result.data and response.result.data.shareCount then
        local newShareNum = response.result.data.shareCount + shareNumAdd
      else
        local newShareNum = shareNumAdd
      end
      if newShareNum <= 0 then
        if newShareNum < 0 then
          LogsManager.errorTag('otherUser_shareCount_error', 'error othersharecountNum')
        end
        newShareNum = 0
      end
      if id ~= 'nologin' then
        Client.instance:setCloudGlobalData({clientDirty={u={shareCount=newShareNum}}, id=id})
      end
    else
      LogsManager.echo('获取全局用户数据失败', "params:" .. JSON:stringify(params) .. "response:" .. response)
    end
  end
  )
end

function UserGlobalModel.setInviteUser(inviterId)
  if inviterId == 'nologin' then
    return
  end
  local shareInfos = {}
  -- [ts2lua]shareInfos下标访问可能不正确
  shareInfos[UserModel.instance:getUserRid()] = {active=1}
  local param = {clientDirty={u={shareInfo=shareInfos}}, id=inviterId}
  LogsManager.echo("设置我被别人邀请的标识----param:" .. JSON:stringify(param))
  Client.instance:setCloudGlobalData(param)
end

function UserGlobalModel:getInviteCount()
  return self._data.shareInfo or {}
end
