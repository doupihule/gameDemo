BattleLayerControler = class('BattleLayerControler')

function BattleLayerControler:ctor(controler, rootCtn)
    self.isInTouch = false;
    self.minX = 0;
    self.maxX = 0;
    self.sceneWidthRate = 1;
    self.controler = controler
    self.rootCtn = rootCtn
    self.a = UITools.createUICtn("a")
    self.a:setPos(-ScreenAdapterTools.width / 2, ScreenAdapterTools.height / 2);
    self.a1 = UITools.createUICtn("a1")
    self.a2 = UITools.createUICtn("a2")
    self.a3 = UITools.createUICtn("a3")
    self.a2Offset = UITools.createUICtn("a2offset")
    self.a21 = UITools.createUICtn("a21")
    self.a22 = UITools.createUICtn("a22")
    self.a23 = UITools.createUICtn("a23")
    rootCtn:addChild(self.a)
    self.a:addChild(self.a1)
    self.a:addChild(self.a2)
    self.a:addChild(self.a3)
    self.a2:addChild(self.a2Offset)
    self.a2Offset:addChild(self.a21)
    self.a2Offset:addChild(self.a22)
    self.a2Offset:addChild(self.a23)
    self.isInTouch = false
end

function BattleLayerControler:setSceneInfo()
    self.minX = ScreenAdapterTools.width - self.controler.mapControler._maxSceneWidth + 64
    self.sceneWidthRate = self.controler.mapControler._maxSceneWidth / 597
end

function BattleLayerControler:updateFrame()
end
function BattleLayerControler:onTouchBegin(event)
    self._startTouchX = event.stageX
    self.isInTouch = true
    self.controler:clearCallBack(self)
end

function BattleLayerControler:onTouchMove(event)
    if self._startTouchX == nil then
        return
    end
    self.controler.cameraControler.inControlBg = false
    local tempPos = self.controler.cameraControler.focusPos.x + self._startTouchX - event.stageX
    tempPos = self:getTweenEndPos(tempPos)
    self.controler.cameraControler.focusPos.x = tempPos
    self.controler.cameraControler:updateCtnPos(1)
    self._startTouchX = event.stageX
end

function BattleLayerControler:onTouchUp(event)
    self._startTouchX = nil
    self.controler:setCallBack(60 * 5, function()
        self.isInTouch = false
    end
    , self)
end

function BattleLayerControler:getTweenEndPos(tempPos)
    if tempPos > self.controler.mapControler._maxSceneWidth then
        tempPos = self.controler.mapControler._maxSceneWidth
    elseif tempPos <= 0 then
        tempPos = 0
    end
    return tempPos
end

function BattleLayerControler:dispose()
    if self.a then
        self.a:removeChildren()
    end
    self.a = nil
    self.a1 = nil
    self.a2 = nil
    self.a3 = nil
    self.a21 = nil
    self.a22 = nil
    self.a23 = nil
    self.controler = nil
end
