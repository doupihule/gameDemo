require("framework/utils/DisplayUtils")
require("framework/manager/ResourceManager")
require("game/sys/consts/ResourceConst")

BattleRoleView = class('BattleRoleView',Laya.Sprite)

function BattleRoleView:ctor(viewName, scale, viewIndex)
  if scale == nil then
    scale=1
  end
  if viewIndex == nil then
    viewIndex=0
  end
  BattleRoleView.super.ctor(self)
  self.aniScale = 1;
  self._viewIndex = 0;
  self._viewScale = 1;
  self.currentViewNums = 1;
  self._xSpace = 0;
  self._ySpace = 0;
  self._useShade = false;
  self._shadeScale = 1;
  self.aniScale = scale
  self._childViewArr = {}
  local aniMode = 0
  if viewIndex > 0 then
    aniMode = 1
  end
  self._viewName = viewName
  self._aniMode = aniMode
  self._viewIndex = viewIndex
  self.currentViewNums = 1
  self._viewScale = scale
  self.currentAni = self:cloneOneChildAni()
end

function BattleRoleView:setSpace(xSpace, ySpace)
  self._xSpace = xSpace
  self._ySpace = ySpace
end

function BattleRoleView:setShade(scale)
  if scale == nil then
    scale=0
  end
  self._useShade = true
  if scale then
    self._shadeScale = scale
  end
  self:sortChildView()
end

function BattleRoleView:showOrHideShade(value)
  if not self._shadeViewArr then
    return
  end
  local i = 0
  repeat
    self._shadeViewArr[i+1].visible = value
    i=i+1
  until not(i < #self._shadeViewArr)
end

function BattleRoleView:changeViewNums(value)
  self.currentViewNums = value
  if #self._childViewArr < self.currentViewNums then
    local i = #self._childViewArr
    repeat
      self:cloneOneChildAni()
      i=i+1
    until not(i < self.currentViewNums)
  end
  local i = self.currentViewNums
  repeat
    self._childViewArr[i+1].visible = false
    self._childViewArr[i+1]:stop()
    i=i+1
  until not(i < #self._childViewArr)
  self:sortChildView()
end

BattleRoleView._childSortFormation = {{{0, 0}}, {{-0.75, 0}, {0.75, 0}}, {{0, -1}, {-0.75, 0}, {0.75, 0}}, {{-1, -1}, {1, -1}, {-1, 0}, {0.5, 0}}, {{0, -1}, {1, -1}, {-1, 0.5}, {0, 0}, {1, 0}}, {{-1, -1}, {0, -1}, {1, -1}, {-1, 0}, {0, 0}, {1, 0}}};
function BattleRoleView.getPosArrByViewNums(viewNums)
  -- [ts2lua]BattleRoleView._childSortFormation下标访问可能不正确
  return BattleRoleView._childSortFormation[viewNums - 1]
end

function BattleRoleView:sortChildView()
  -- [ts2lua]BattleRoleView._childSortFormation下标访问可能不正确
  local formationArr = BattleRoleView._childSortFormation[self.currentViewNums - 1]
  if self._useShade then
    if not self._shadeViewArr then
      self._shadeViewArr = {}
    end
  end
  local i = 0
  repeat
    local posArr = formationArr[i+1]
    local view = self._childViewArr[i+1]
    view:pos(posArr[0+1] * self._xSpace, posArr[1+1] * self._ySpace)
    if self._useShade then
      local shaderView = self._shadeViewArr[i+1]
      if not shaderView then
        shaderView = Laya.Image(ResourceConst.BATTLE_SHADE)
        shaderView:scale(self._shadeScale, self._shadeScale, true)
        shaderView.anchorX = 0.5
        shaderView.anchorY = 0.5
        self:addChildAt(shaderView, 0)
        self._shadeViewArr[i+1] = shaderView
      end
      shaderView.x = view.x + 2
      shaderView.y = view.y + 3
    end
    i=i+1
  until not(i < #formationArr)
end

function BattleRoleView:cloneOneChildAni()
  local ani = DisplayUtils.createSkeletonExpand(self._viewName, self._aniMode)
  ani:scale(self._viewScale, self._viewScale)
  table.insert(self._childViewArr, ani)
  if self._viewIndex > 0 then
    local spinePath = ResourceManager.getSpinePath(self._viewName)
    ani:changWholeViewTexture(spinePath + self._viewName .. "_" .. self._viewIndex .. ".png")
  end
  self:addChild(ani)
  return ani
end

function BattleRoleView:setItemViewScale(scale)
  self._viewScale = scale
  self.currentAni:scale(scale, scale)
end

function BattleRoleView:stop()
  local i = 0
  repeat
    self._childViewArr[i+1]:stop()
    i=i+1
  until not(i < self.currentViewNums)
end

function BattleRoleView:play(nameOrIndex, loop, force, start, tsvar_end, freshSkin, playAudio)
  local i = 0
  repeat
    self._childViewArr[i+1]:play(nameOrIndex, loop, force, start, tsvar_end, freshSkin, playAudio)
    i=i+1
  until not(i < self.currentViewNums)
end

function BattleRoleView:resume()
  local i = 0
  repeat
    self._childViewArr[i+1]:resume()
    i=i+1
  until not(i < self.currentViewNums)
end

function BattleRoleView:setPlaySpeed(value)
  local i = 0
  repeat
    local childAni = self._childViewArr[i+1]
    if childAni.player then
      childAni.player.playbackRate = value
    end
    i=i+1
  until not(i < self.currentViewNums)
end

function BattleRoleView:setChildViewPos(x, y)
  local i = 0
  repeat
    local childAni = self._childViewArr[i+1]
    childAni:pos(x, y, true)
    i=i+1
  until not(i < self.currentViewNums)
end

function BattleRoleView:showOrHideSlot(slotName, value)
  if value == nil then
    value=false
  end
  local i = 0
  repeat
    local childAni = self._childViewArr[i+1]
    childAni:showOrHideSlot(slotName, value)
    i=i+1
  until not(i < self.currentViewNums)
end
