

RoleHealthBar = class('RoleHealthBar')

function RoleHealthBar:ctor()
  RoleHealthBar.super.ctor(self)
  self._initWidth = 80;
  self._initHeight = 8;
  self._offsetY = 0;
end

function RoleHealthBar:setData(owner, ctn)
  self.owner = owner
  self._offsetY = -self.owner.realSize[0+1] - 10
  if not self.srollImage then
    self.backImage = self:createImage(ResourceConst.BATTLE_HEALTH_BACK, self._initWidth + 2, self._initHeight + 2)
    if self.owner.camp == 1 then
      self.srollImage = self:createImage(ResourceConst.BATTLE_HEALTH_PROGRESS, self._initWidth, self._initHeight)
    else
      self.srollImage = self:createImage(ResourceConst.BATTLE_HEALTH_PROGRESS2, self._initWidth, self._initHeight)
    end
    self.shieldImage = self:createImage(ResourceConst.BATTLE_HEALTH_HUDUN, self._initWidth, self._initHeight)
    self.nameText = Laya.Label()
    local nameText = self.nameText
    self:addChild(nameText)
    nameText.bold = true
    nameText.font = "Microsoft YaHei"
    nameText.fontSize = 18
    nameText.anchorX = 0.5
    nameText.anchorY = 0.5
    nameText.x = self.width / 2
    nameText.y = -20
    nameText.stroke = 2
    nameText.strokeColor = "#000000"
    self.srollImage.sizeGrid = "3,3,3,3"
    self:addChild(self.backImage)
    self:addChild(self.srollImage)
    self:addChild(self.shieldImage)
  end
  self.shieldImage.visible = false
  ctn:addChild(self)
  self:onHpChange()
  self.visible = false
end

function RoleHealthBar:createImage(url, wid, hei)
  local image = UITools.createUIImage(url)
  image.sizeGrid = "1,3,1,3"
  image.width = wid
  image.height = hei
  image.anchorX = 0
  image.anchorY = 0.5
  image.x = -wid / 2
  return image
end

function RoleHealthBar:delayHide()
  self.visible = false
end

function RoleHealthBar:onHpChange()
  self.nameText.text = ""
  local hp = self.owner.hp
  local shieldValue = self.owner:getSheildValue()
  local percent = self.owner.hp / self.owner:getMaxHp()
  self.owner.hpPercent = percent
  local width = self._initWidth * percent
  if width < 0 then
    width = 0
  end
  if width > self._initWidth then
    width = self._initWidth
  end
  self.srollImage.width = width
  if shieldValue > 0 then
    self.shieldImage.visible = true
    local percent2 = shieldValue / self.owner:getMaxHp()
    if percent2 > 0.7 then
      percent2 = 0.7
    end
    local wid2 = math.round(self._initWidth * percent2)
    self.shieldImage.width = wid2
    if percent + percent2 > 1 then
      self.shieldImage.x = self._initWidth / 2 - wid2
    else
      self.shieldImage.x = self.srollImage.width - self._initWidth / 2
    end
  else
    self.shieldImage.visible = false
  end
  self.visible = true
  self.owner.controler:clearCallBack(self, self.delayHide)
  self.owner.controler:setCallBack(120, self.delayHide, self)
end

function RoleHealthBar:followTarget()
  self.x = self.owner._myView.x
  self.y = self.owner._myView.y + self._offsetY
end

function RoleHealthBar:dispose()
  self.owner = nil
  self.backImage = nil
  self:removeSelf()
end

function RoleHealthBar:onSetToCache()
  self:removeSelf()
end
