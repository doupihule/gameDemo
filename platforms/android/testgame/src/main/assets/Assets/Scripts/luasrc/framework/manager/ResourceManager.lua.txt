ResourceManager = class('ResourceManager')
ResourceManager._spineModelMap = {};

local uiPrefabPath = "Assets/UI/Prefabs/"
local spinePrefabPath =  "Assets/Animation/Prefabs/"

--加载ui预设
function ResourceManager.loadUIPrefab(name, boundlename)
    local path = uiPrefabPath .. name .. ".prefab";
    local obj = CS.Resource.ResourceManager.Instance:luaLoadAsset(path, path, boundlename);
    return CS.UnityEngine.Object.Instantiate(obj)
end

--加载动画预设.返回动画实例
function ResourceManager.loadSpinePrefab(name,boundlename)
    local path = spinePrefabPath .. name .. ".prefab";
    local obj = CS.Resource.ResourceManager.Instance:luaLoadAsset(path, path, boundlename);
    if(not obj)then
        name = "effect_jidi_attack_hit";
        LogsManager.errorTag("spineError","没有找到对应的spine:"..name.."_用临时spine替代effect_jidi_attack_hit");
        path = spinePrefabPath .. name .. ".prefab";
        obj = CS.Resource.ResourceManager.Instance:luaLoadAsset(path, path, boundlename);

    end
    return CS.UnityEngine.Object.Instantiate(obj)
end

--加载Sprite图片
function ResourceManager.loadSprite(imageurl,boundlename)
    if(not imageurl) then
        LogsManager.errorTag("nullImageUrl","ResourceManager.loadSprite");
    end
    local path = imageurl ..".png"
    local sp = CS.Resource.ResourceManager.Instance:luaLoadSpriteAsset(path, path, boundlename);
    if(not sp)then
        LogsManager.errorTag("spriteError",path.."加载失败");
        return nil
    end
    return CS.UnityEngine.Object.Instantiate(sp)
end

