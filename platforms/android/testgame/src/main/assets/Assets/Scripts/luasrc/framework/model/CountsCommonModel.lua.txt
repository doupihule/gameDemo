CountsCommonModel = class('CountsCommonModel', BaseModel)
function CountsCommonModel:ctor()
    CountsCommonModel.super.ctor(self)
end

CountsCommonModel.TYPE_INTERVALAD_COUNT = "1";
CountsCommonModel.TYPE_INTERVALAD_LASTSHOWTIME = "2";
CountsCommonModel.TYPE_INTERVAL_ORIGINAL_CLICK_COUNT = "3";
function CountsCommonModel.getInstance()
    if not CountsCommonModel._instance then
        CountsCommonModel._instance = CountsCommonModel.new()
    end
    return CountsCommonModel._instance
end

function CountsCommonModel:initData(d)
    CountsCommonModel.super.initData(self, d)
end

function CountsCommonModel:updateData(d)
    CountsCommonModel.super.updateData(self, d)
end

function CountsCommonModel:getCountById(id)
    local num = 0
    if not self:IsExpire(id) then
        num = self._data[id]["count"]
    end
    return num
end

function CountsCommonModel:getShareTvCountById(id)
    return self:getCountById(self:turnShareTvId(id))
end

function CountsCommonModel:turnShareTvId(id)
    return "shareTv" .. id
end

function CountsCommonModel:IsExpire(id)
    if self._data[id] then
        if self._data[id]["expireTime"] then
            local expireTime = self._data[id]["expireTime"]
            if expireTime > Client.getInstance():getServerTime() then
                return false
            else
                return true
            end
        end
    end
    return true
end
